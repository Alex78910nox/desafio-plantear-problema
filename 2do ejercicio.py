# -*- coding: utf-8 -*-
"""inter-importaciones.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1z5iABYVi-G5WngkYTq0EC251nT56gmzn
"""

import numpy as np
import matplotlib.pyplot as plt

# Datos de la tabla
x = np.array([2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022])
y = np.array([7030.9, 7917.8, 8802.6, 7613.1, 8221.5, 8464, 8739.5, 6198.6, 7711.8, 12392.6])

# Ajuste polinomial de grado 2
coef = np.polyfit(x, y, 2)
polinomio = np.poly1d(coef)

# Predicción para el año 2024
x_pred = 2023
y_pred = polinomio(x_pred)

# Imprimir el resultado
print(f"Predicción para el año {x_pred}: {y_pred:.2f}")

# Graficar los datos originales y el polinomio ajustado
plt.scatter(x, y, color='red', label='Datos originales')
plt.plot(x, polinomio(x), label='Ajuste polinomial grado 2', color='blue')

# Graficar el punto interpolado
plt.scatter(x_pred, y_pred, color='green', label=f'Predicción 2024: {y_pred:.2f}')
plt.axvline(x_pred, linestyle='--', color='gray')

plt.title('Interpolación Polinomial - Importaciones')
plt.xlabel('Año')
plt.ylabel('Importaciones')
plt.legend()
plt.grid(True)
plt.show()

import numpy as np
import matplotlib.pyplot as plt

# Nuevos datos de importaciones (2018 - 2022)
anios = np.array([2018, 2019, 2020, 2021, 2022])
importaciones = np.array([8464, 8739.5, 6198.6, 7711.8, 12392.6])

# Interpolación de Newton: Cálculo de diferencias divididas
def diferencias_divididas(x, y):
    n = len(y)
    coef = np.copy(y)
    for j in range(1, n):
        for i in range(n-1, j-1, -1):
            coef[i] = (coef[i] - coef[i-1]) / (x[i] - x[i-j])
    return coef

# Polinomio de Newton
def polinomio_newton(x_data, coef, x):
    n = len(coef) - 1
    p = coef[n]
    for k in range(1, n+1):
        p = coef[n-k] + (x - x_data[n-k]) * p
    return p

# Calcular coeficientes para Newton
coef_newton = diferencias_divididas(anios, importaciones)

# Año a interpolar (2023)
x_pred = 2023
y_pred = polinomio_newton(anios, coef_newton, x_pred)

# Imprimir el valor interpolado para 2023
print(f"Interpolación para el año {x_pred}: {y_pred:.2f}")

# Gráfica de resultados
x_nuevos = np.linspace(2018, 2023, 100)
y_newton = [polinomio_newton(anios, coef_newton, xi) for xi in x_nuevos]

# Graficar los resultados
plt.plot(anios, importaciones, 'o', label="Datos originales (Importaciones)")
plt.plot(x_nuevos, y_newton, '-', label="Interpolación Newton")
plt.scatter(x_pred, y_pred, color='green', zorder=5, label=f'Interpolación 2023: {y_pred:.2f}')
plt.axvline(x_pred, linestyle='--', color='gray')

# Ajustar etiquetas y título
plt.xlabel("Año")
plt.ylabel("Importaciones (millones USD)")
plt.legend()
plt.title("Interpolación de Newton - Importaciones (2018-2022)")
plt.grid(True)
plt.show()